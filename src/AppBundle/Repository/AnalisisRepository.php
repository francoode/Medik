<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * AnalisisRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnalisisRepository extends EntityRepository
{
    public function getAnalisisPaciente($idPaciente, $idItem)
    {



        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();


        $query->select('ra.resultado')
            ->addSelect('a.fechaEntrega ')
            ->from('AppBundle:ResultadoAnalisis', 'ra')
            ->leftJoin('ra.analisis','a')
            ->leftJoin('ra.item','it')
            ->where('it.id = :idItem')
            ->andWhere('a.paciente = :idPaciente')
            ->orderBy('a.fechaEntrega')
            ->setParameter('idPaciente',$idPaciente)
            ->setParameter('idItem',$idItem)
            ->getQuery();

       return ($query->getQuery()->getResult());

    }

    public function getAnalisisByPaciente($ff,$fi,$paciente)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('a')
            ->from('AppBundle:Analisis','a')
            ->where('a.paciente = :idPaciente')
            ->andWhere('a.fechaCreado >= :fi')
            ->andWhere('a.fechaCreado <= :ff')
            ->setParameter('idPaciente',$paciente->getId())
            ->setParameter('fi',$fi)
            ->setParameter('ff',$ff)
            ->getQuery();

        return $query->getQuery()->getResult();

    }

    public function getCantidadTipo($fi, $ff)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('COUNT(ta.id) as cantidad')
            ->addSelect('ta.nombre')
            ->from('AppBundle:Analisis','a')
            ->join('a.tipoAnalisis','ta')
            ->groupBy('ta.id')
            ->where('a.fechaCreado <= :ff')
            ->andWhere('a.fechaCreado >= :fi')
            ->setParameter('fi',$fi)
            ->setParameter('ff',$ff)
            ->getQuery();

        return $query->getQuery()->getResult();
    }

    public function getTotalTipo($fi, $ff)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('COUNT(ta) as total')
            ->from('AppBundle:Analisis','a')
            ->join('a.tipoAnalisis','ta')
            ->where('a.fechaCreado <= :ff')
            ->andWhere('a.fechaCreado >= :fi')
            ->setParameter('fi',$fi)
            ->setParameter('ff',$ff)
            ->getQuery();

        return $query->getQuery()->getResult();
    }

    public function getCantidadOS($fi, $ff)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('COUNT(p.obraSocial) as cantidad')
            ->addSelect('os.name')
            ->from('AppBundle:Analisis', 'a')
            ->join('a.paciente','p')
            ->join('p.obraSocial','os')
            ->where('a.fechaCreado <= :ff')
            ->andWhere('a.fechaCreado >= :fi')
            ->setParameter('fi',$fi)
            ->setParameter('ff',$ff)
            ->groupBy('p.obraSocial')
            ->getQuery();

        return $query->getQuery()->getResult();
    }

    public function getTotalOS($fi, $ff)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('COUNT(p.obraSocial) as total')
            ->from('AppBundle:Analisis', 'a')
            ->join('a.paciente','p')
            ->join('p.obraSocial','os')
            ->where('a.fechaCreado <= :ff')
            ->andWhere('a.fechaCreado >= :fi')
            ->setParameter('fi',$fi)
            ->setParameter('ff',$ff)
            ->getQuery();

        return $query->getQuery()->getResult();

    }

    public function getAnalisisbydateProf($fi, $ff, $prof)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('a')
            ->from('AppBundle:Analisis','a')
            ->where('a.fechaCreado >= :fi')
            ->andWhere('a.fechaCreado <= :ff')
            ->andWhere('a.profesional = :prof')
            ->andWhere('a.estado = :pendiente or a.estado = :enejecucion')
            ->setParameter('pendiente', 'Pendiente')
            ->setParameter('enejecucion','En EjecuciÃ³n')
            ->setParameter('prof', $prof)
            ->setParameter('fi',$fi)
            ->setParameter('ff',$ff)
            ->getQuery();


        return $query->getQuery()->getResult();
    }

    public function getAnalisisbydatePac($fi, $ff, $pac)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('a')
            ->from('AppBundle:Analisis','a')
            ->where('a.fechaCreado >= :fi')
            ->andWhere('a.fechaCreado <= :ff')
            ->andWhere('a.paciente = :pac')
            ->setParameter('pac', $pac)
            ->setParameter('fi',$fi)
            ->setParameter('ff',$ff)
            ->getQuery();


        return $query->getQuery()->getResult();
    }

    public function getAnalisisbydate($fi, $ff)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('a')
            ->from('AppBundle:Analisis','a')
            ->where('a.fechaCreado >= :fi')
            ->andWhere('a.fechaCreado <= :ff')
            ->setParameter('fi',$fi)
            ->setParameter('ff',$ff)
            ->getQuery();


        return $query->getQuery()->getResult();
    }


    public function getIntegral($fi, $ff)
    {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('a');
        $query->addSelect('os');
        $query->addSelect('pro');
        $query->addSelect('p');
        $query->addSelect('i');
        $query->addSelect('it');
        $query->from('AppBundle:Analisis','a');
        $query->leftJoin('a.profesional','pro');
        $query->leftJoin('a.paciente','p');
        $query->leftJoin('p.obraSocial', 'os');
        $query->leftJoin('a.item','i');
        $query->leftJoin('i.item','it');
        $query->where('a.fechaCreado >= :fi');
        $query->andWhere('a.fechaCreado <= :ff');
        $query->setParameter('fi',$fi);
        $query->setParameter('ff',$ff);
        $query->getQuery();
        return $query->getQuery()->getResult();

    }
       /* $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query->select('a');

        if($paciente)
        {
            $query->addSelect('p');
            if($os)
            {
                $query->addSelect('os');
            }

        }
        if($profesional)
        {
            $query->addSelect('pro');

        }
        if($item)
        {
            $query->addSelect('i');
            $query->addSelect('it');

        }
            $query->from('AppBundle:Analisis','a');
        if($paciente)
        {
            $query->leftJoin('a.paciente','p');
            if($os)
            {
                $query->leftJoin('p.obraSocial', 'os');
            }
        }
        if($profesional)
        {
            $query->leftJoin('a.profesional','pro');
        }
        if($item)
        {
            $query->leftJoin('a.item','i');
            $query->leftJoin('i.item','it');
        }

        $query->getQuery();
        return $query->getQuery()->getResult();*/


}
